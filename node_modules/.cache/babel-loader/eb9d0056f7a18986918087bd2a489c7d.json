{"ast":null,"code":"// Action value\nconst ADD_TODO = \"ADD_TODO\";\nconst GET_TODO_BY_ID = \"GET_TODO_BY_ID\";\nconst DELETE_TODO = \"DELETE_TODO\";\nconst TOGGLE_STATUS_TODO = \"TOGGLE_STATUS_TODO\"; // Action Creator\n// Todo를 추가하는 action creator\n\nexport const addTodo = payload => {\n  return {\n    type: ADD_TODO,\n    payload\n  };\n}; // Todo를 지우는 action creator\n\nexport const deleteTodo = payload => {\n  return {\n    type: DELETE_TODO,\n    payload\n  };\n}; // Todo를 isDone를 변경하는 action creator\n\nexport const toggleStatusTodo = payload => {\n  return {\n    type: TOGGLE_STATUS_TODO,\n    payload\n  };\n}; // 상세 페이지에서 특정 Todo만 조회하는 action creator\n\nexport const getTodoByID = payload => {\n  return {\n    type: GET_TODO_BY_ID,\n    payload\n  };\n}; // initial state\n\nconst initialState = {\n  todos: [{\n    id: \"1\",\n    title: \"리액트\",\n    body: \"리액트를 배워봅시다\",\n    isDone: false\n  }],\n  todo: {\n    id: \"0\",\n    title: \"\",\n    body: \"\",\n    isDone: false\n  }\n};\n\nconst todos = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_TODO:\n      return { ...state,\n        todos: [action.payload]\n      };\n\n    case TOGGLE_STATUS_TODO:\n      return { ...state,\n        todos: state.todos.map(todo => {\n          if (todo.id === action.payload) {\n            return { ...todo,\n              isDone: !todo.isDone\n            };\n          } else {\n            return todo;\n          }\n        })\n      };\n\n    case GET_TODO_BY_ID:\n      return { ...state,\n        todo: state.todos.find(todo => {\n          return todo.id === action.payload;\n        })\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default todos;","map":{"version":3,"names":["ADD_TODO","GET_TODO_BY_ID","DELETE_TODO","TOGGLE_STATUS_TODO","addTodo","payload","type","deleteTodo","toggleStatusTodo","getTodoByID","initialState","todos","id","title","body","isDone","todo","state","action","map","find"],"sources":["/Users/ssg/Desktop/todolist_redux_assignment/src/redux/modules/todos.js"],"sourcesContent":["// Action value\nconst ADD_TODO = \"ADD_TODO\";\nconst GET_TODO_BY_ID = \"GET_TODO_BY_ID\";\nconst DELETE_TODO = \"DELETE_TODO\";\nconst TOGGLE_STATUS_TODO = \"TOGGLE_STATUS_TODO\";\n\n// Action Creator\n// Todo를 추가하는 action creator\nexport const addTodo = (payload) => {\n  return {\n    type: ADD_TODO,\n    payload,\n  };\n};\n\n// Todo를 지우는 action creator\nexport const deleteTodo = (payload) => {\n  return {\n    type: DELETE_TODO,\n    payload,\n  };\n};\n\n// Todo를 isDone를 변경하는 action creator\nexport const toggleStatusTodo = (payload) => {\n  return {\n    type: TOGGLE_STATUS_TODO,\n    payload,\n  };\n};\n\n// 상세 페이지에서 특정 Todo만 조회하는 action creator\nexport const getTodoByID = (payload) => {\n  return {\n    type: GET_TODO_BY_ID,\n    payload,\n  };\n};\n\n// initial state\nconst initialState = {\n  todos: [\n    {\n      id: \"1\",\n      title: \"리액트\",\n      body: \"리액트를 배워봅시다\",\n      isDone: false,\n    },\n  ],\n  todo: {\n    id: \"0\",\n    title: \"\",\n    body: \"\",\n    isDone: false,\n  },\n};\n\nconst todos = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TODO:\n      return {\n        ...state,\n        todos: [action.payload],\n      };\n\n    case TOGGLE_STATUS_TODO:\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if (todo.id === action.payload) {\n            return {\n              ...todo,\n              isDone: !todo.isDone,\n            };\n          } else {\n            return todo;\n          }\n        }),\n      };\n\n    case GET_TODO_BY_ID:\n      return {\n        ...state,\n        todo: state.todos.find((todo) => {\n          return todo.id === action.payload;\n        }),\n      };\n    default:\n      return state;\n  }\n};\n\nexport default todos;\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,UAAjB;AACA,MAAMC,cAAc,GAAG,gBAAvB;AACA,MAAMC,WAAW,GAAG,aAApB;AACA,MAAMC,kBAAkB,GAAG,oBAA3B,C,CAEA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAIC,OAAD,IAAa;EAClC,OAAO;IACLC,IAAI,EAAEN,QADD;IAELK;EAFK,CAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAME,UAAU,GAAIF,OAAD,IAAa;EACrC,OAAO;IACLC,IAAI,EAAEJ,WADD;IAELG;EAFK,CAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMG,gBAAgB,GAAIH,OAAD,IAAa;EAC3C,OAAO;IACLC,IAAI,EAAEH,kBADD;IAELE;EAFK,CAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMI,WAAW,GAAIJ,OAAD,IAAa;EACtC,OAAO;IACLC,IAAI,EAAEL,cADD;IAELI;EAFK,CAAP;AAID,CALM,C,CAOP;;AACA,MAAMK,YAAY,GAAG;EACnBC,KAAK,EAAE,CACL;IACEC,EAAE,EAAE,GADN;IAEEC,KAAK,EAAE,KAFT;IAGEC,IAAI,EAAE,YAHR;IAIEC,MAAM,EAAE;EAJV,CADK,CADY;EASnBC,IAAI,EAAE;IACJJ,EAAE,EAAE,GADA;IAEJC,KAAK,EAAE,EAFH;IAGJC,IAAI,EAAE,EAHF;IAIJC,MAAM,EAAE;EAJJ;AATa,CAArB;;AAiBA,MAAMJ,KAAK,GAAG,YAAkC;EAAA,IAAjCM,KAAiC,uEAAzBP,YAAyB;EAAA,IAAXQ,MAAW;;EAC9C,QAAQA,MAAM,CAACZ,IAAf;IACE,KAAKN,QAAL;MACE,OAAO,EACL,GAAGiB,KADE;QAELN,KAAK,EAAE,CAACO,MAAM,CAACb,OAAR;MAFF,CAAP;;IAKF,KAAKF,kBAAL;MACE,OAAO,EACL,GAAGc,KADE;QAELN,KAAK,EAAEM,KAAK,CAACN,KAAN,CAAYQ,GAAZ,CAAiBH,IAAD,IAAU;UAC/B,IAAIA,IAAI,CAACJ,EAAL,KAAYM,MAAM,CAACb,OAAvB,EAAgC;YAC9B,OAAO,EACL,GAAGW,IADE;cAELD,MAAM,EAAE,CAACC,IAAI,CAACD;YAFT,CAAP;UAID,CALD,MAKO;YACL,OAAOC,IAAP;UACD;QACF,CATM;MAFF,CAAP;;IAcF,KAAKf,cAAL;MACE,OAAO,EACL,GAAGgB,KADE;QAELD,IAAI,EAAEC,KAAK,CAACN,KAAN,CAAYS,IAAZ,CAAkBJ,IAAD,IAAU;UAC/B,OAAOA,IAAI,CAACJ,EAAL,KAAYM,MAAM,CAACb,OAA1B;QACD,CAFK;MAFD,CAAP;;IAMF;MACE,OAAOY,KAAP;EA9BJ;AAgCD,CAjCD;;AAmCA,eAAeN,KAAf"},"metadata":{},"sourceType":"module"}